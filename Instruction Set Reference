General-Purpose Registers
EAX = 1
ECX = 2
EDX = 3
EBX = 4
RSP = 5
RBP = 6
ESI = 7
EDI = 8

//x = register
//y = memory
//z = immediate
//j = instruction
lea register, memory
[1000 1101][0000 1111][xxxx xxxx][yyyy yyyy]
push register
[0000 0110][xxxx xxxx][0000 0000][0000 0000]
pop register
[0000 0111][xxxx xxxx][0000 0000][0000 0000]
ret
[1100 0010][0000 0000 0000 0000 0000 0000]
call instruction
[1110 1000][jjjj jjjj jjjj jjjj jjjj jjjj]

mov register, register
[1000 1001][0000 0000][xxxx xxxx][xxxx xxxx]
mov memory, register
[1000 1001][1111 0000][yyyy yyyy][xxxx xxxx]
mov register, memory
[1000 1011][0000 1111][xxxx xxxx][yyyy yyyy]
mov register, reg+4*reg
[1000 1011][1111 XXXX][xxxx xxxx][XXXX XXXX]
mov register, immediate
[1100 0110][xxxx xxxx][zzzz zzzz zzzz zzzz]
mov memory, memory
//Can't do memory to memory
mov memory, immediate
[1100 0111][yyyy yyyy][zzzz zzzz zzzz zzzz]
add register, register
[0000 0001][0000 0000][xxxx xxxx][xxxx xxxx]
add register, immediate
[0000 0101][xxxx xxxx][zzzz zzzz zzzz zzzz]
sub register, register
[0010 1001][0000 0000][xxxx xxxx][xxxx xxxx]
sub register, immediate
[0010 1101][xxxx xxxx][zzzz zzzz zzzz zzzz]

cmp register, register
[0011 1001][0000 0000][xxxx xxxx][xxxx xxxx]
cmp register, memory
[0011 1011][0000 1111][xxxx xxxx][yyyy yyyy]
cmp register, reg+4*reg
[0011 1011][1111 XXXX][xxxx xxxx][XXXX XXXX]
cmp register, immediate
[0011 1101][xxxx xxxx][zzzz zzzz zzzz zzzz]
cmp memory, register	//Not used
[0011 1001][1111 0000][yyyy yyyy][xxxx xxxx]

jmp instruction
[1110 1001][jjjj jjjj jjjj jjjj jjjj jjjj]
jg instruction
[1000 1111][jjjj jjjj jjjj jjjj jjjj jjjj]
jl instruction
[1000 1100][jjjj jjjj jjjj jjjj jjjj jjjj]
je instruction
[1000 0100][jjjj jjjj jjjj jjjj jjjj jjjj]
jge instruction
[1000 1101][jjjj jjjj jjjj jjjj jjjj jjjj]
jle instruction
[1000 1110][jjjj jjjj jjjj jjjj jjjj jjjj]
jne instruction
[1000 0101][jjjj jjjj jjjj jjjj jjjj jjjj]
